study(title = "HLC-ANGL XBT FIXED", overlay = false)

fLen = input(5, 'fast len')
sLen = input(720, 'slow len')

b_open = security('BITSTAMP:BTCUSD', period, open)
b_high = security('BITSTAMP:BTCUSD', period, high)
b_low = security('BITSTAMP:BTCUSD', period, low)
b_close = security('BITSTAMP:BTCUSD', period, close)

m_open = security('(BITSTAMP:BTCUSD + BTCE:BTCUSD + BTCCHINA:BTCCNY / FX:USDCNH) / 3', period, open)
m_high = security('(BITSTAMP:BTCUSD + BTCE:BTCUSD + BTCCHINA:BTCCNY / FX:USDCNH) / 3', period, high)
m_low = security('(BITSTAMP:BTCUSD + BTCE:BTCUSD + BTCCHINA:BTCCNY / FX:USDCNH) / 3', period, low)
m_close = security('(BITSTAMP:BTCUSD + BTCE:BTCUSD + BTCCHINA:BTCCNY / FX:USDCNH) / 3', period, close)

x_open = security('MTGOX:BTCUSD', period, open)
x_high = security('MTGOX:BTCUSD', period, high)
x_low = security('MTGOX:BTCUSD', period, low)
x_close = security('MTGOX:BTCUSD', period, close)

use_nna(s1, s2, s3) => na(s1) == 0 ? s1 : na(s2) == 0 ? s2 : s3

_open = use_nna(m_open, b_open, x_open)
_high = use_nna(m_high, b_high, x_high)
_low = use_nna(m_low, b_low, x_low)
_close = use_nna(m_close, b_close, x_close)

_ohlc4 = (_open + _high + _low + _close) / 4
_hlc3 = (_high + _low + _close) / 3
_oc2 = (_open + _close) / 2
_mid = _ohlc4 * 0.8 + _close * 0.2

one = _close / _close
mion = -one
zero = _close * 0

smoother(s) => ema(s, fLen) - sma(s, sLen)
delta(s) => s[0] - s[1]

//i1 = hlcD > cD ? one : mion
//i2 = ohlcD > hlcD ? one : mion
//i3 = hlcD < ocD ? one : mion
//i4 = cD < oD ? one : mion
//i5 = hD > cD ? one : mion
//plot(cD - 0.003, color = i1==1 ? #ff0000 : #00ff00, linewidth = 2, style = circles)
//plot(cD - 0.004, color = i2==1 ? #ff0000 : #00ff00, linewidth = 2, style = circles)
//plot(cD - 0.005, color = i3==1 ? #ff0000 : #00ff00, linewidth = 2, style = circles)
//plot(cD - 0.006, color = i4==1 ? #ff0000 : #00ff00, linewidth = 2, style = circles)
//plot(cD - 0.007, color = i5==1 ? #ff0000 : #00ff00, linewidth = 2, style = circles)
// //plot(cD - 0.008, color = lD > cD ? #ff0000 : #00ff00, linewidth = 2, style = circles)

hD = delta(_high)
lD = delta(_low)
cD = delta(_close)
hlcD = delta(_hlc3)
ohlcD = delta(_ohlc4)
midD = delta(_mid)

hDD = smoother(hD)
lDD = smoother(lD)
cDD = smoother(cD)
hlcDD = smoother(hlcD)
ohlcDD = smoother(ohlcD)
midDD = smoother(midD)

upper_raw = max(max(max(0, cD), hD), lD)
lower_raw = min(min(min(0, cD), hD), lD)

upper = max(upper_raw, smoother(smoother(upper_raw)))
lower = min(lower_raw, smoother(smoother(ema(lower_raw)))

thresh = sma(abs(cDD), 500) * 1.618
plot(thresh*1.618)
plot(thresh)
hline(0, color=#ffff00)
plot(-thresh)
plot(-thresh*1.618)

//plot(cDD, color = cDD > 0 ? #cfffcf : #ffcfcf, style = histogram, linewidth = 1)

plot(upper, color = #333333, style = line, linewidth=2)
plot(lower, color = #333333, style = line, linewidth=2)

plot(hDD, color = #00ff00, style = circles)
plot(hDD, color = #00ff00, style = line)
plot(lDD, color = #ff0000, style = circles)
plot(lDD, color = #ff0000, style = line)
plot(cDD, color = #5050ff, style = line)

udClr = midD > cD ? #ff00ff : #00ffff
plot(midDD, color = #000000, style = line)
plot(midDD, color = udClr, style = circles)
